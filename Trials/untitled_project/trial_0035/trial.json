{"trial_id": "0035", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid", "leaky_relu", "elu", "selu", "swish", "prelu"], "ordered": false}}, {"class_name": "Int", "config": {"name": "first_units", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_3", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_4", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_5", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_6", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_7", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_8", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_9", "default": null, "conditions": [], "min_value": 1, "max_value": 40, "step": 5, "sampling": "linear"}}], "values": {"activation": "prelu", "first_units": 11, "num_layers": 9, "units_0": 1, "units_1": 36, "units_2": 36, "units_3": 11, "units_4": 31, "units_5": 21, "units_6": 26, "units_7": 16, "units_8": 31, "units_9": 11, "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 430, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\bosb0\\AppData\\Local\\Temp\\ipykernel_25292\\602584589.py\", line 9, in create_model\n    nn_model.add(tf.keras.layers.Dense(units=hp.Int('first_units',\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras\\src\\layers\\core\\dense.py\", line 89, in __init__\n    self.activation = activations.get(activation)\n  File \"c:\\Users\\bosb0\\anaconda3.1\\envs\\dev\\lib\\site-packages\\keras\\src\\activations\\__init__.py\", line 104, in get\n    raise ValueError(\nValueError: Could not interpret activation function identifier: prelu\n"}